architectury {
    common(rootProject.enabled_platforms.split(","))
}

loom {
    accessWidenerPath = file("src/main/resources/respawnobelisks.accesswidener")
}

repositories {
    maven { url = "https://maven.uuid.gg/releases" }
    maven { url = "https://jitpack.io" }
    maven { url = "https://maven.resourcefulbees.com/repository/maven-public/" }
    maven { url = 'https://maven.blamejared.com' }
    maven { url = "https://maven.shedaniel.me/" }
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"
    // Remove the next line if you don't want to depend on the API
    modApi "dev.architectury:architectury:${rootProject.architectury_version}"

    modImplementation "curse.maven:revive-533879:4656297" // todo remove

    modApi "com.redpxnda.nucleus:nucleus-core-common:${rootProject.minecraft_version}+${rootProject.nucleus_core_version}"
    modApi "com.redpxnda.nucleus:nucleus-codec-common:${rootProject.minecraft_version}+${rootProject.nucleus_codec_version}"
    modApi "com.redpxnda.nucleus:nucleus-config-common:${rootProject.minecraft_version}+${rootProject.nucleus_config_version}"
    modApi "com.redpxnda.nucleus:nucleus-facet-common:${rootProject.minecraft_version}+${rootProject.nucleus_facet_version}"

    modCompileOnlyApi("mezz.jei:jei-${rootProject.minecraft_version}-fabric:${rootProject.jei_version}") {
        transitive = false
    }

    modCompileOnlyApi("tschipp.carryon:carryon-common-${rootProject.minecraft_version}:${rootProject.carryon_common_version}")

    modCompileOnlyApi("me.shedaniel:RoughlyEnoughItems-api:${rootProject.rei_version}")
    modCompileOnlyApi("me.shedaniel:RoughlyEnoughItems-default-plugin:${rootProject.rei_version}")

    implementation(annotationProcessor("io.github.llamalad7:mixinextras-common:${rootProject.mixin_extras_version}"))
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
    }
}
