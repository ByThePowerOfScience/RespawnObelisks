plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "0.12.0-SNAPSHOT" apply false

    id "com.modrinth.minotaur" version "2.+"
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "com.modrinth.minotaur"
    apply plugin: "com.matthewprenger.cursegradle"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        // The following line declares the mojmap mappings, you may use other mappings as well
        mappings loom.officialMojangMappings()
        // The following line declares the yarn mappings you may select this one as well.
        // mappings "net.fabricmc:yarn:1.19.2+build.3:v2"
    }

    var env = System.getenv()
    var modLoader = name

    var changelogFile = rootProject.file("changelog.txt")
    var changelogText = changelogFile.exists() ? changelogFile.text : ""

    if (env.MODRINTH_TOKEN) {
        modrinth {
            //syncBodyFrom = rootProject.file("README.md").text

            projectId = env.MODRINTH_PROJECT
            uploadFile = tasks.remapJar
            versionNumber = "${rootProject.mod_version}"
            gameVersions = [minecraft_version]
            loaders = [modLoader]
            changelog = changelogText

            if (modLoader == "fabric") {
                dependencies {
                    required.project "fabric-api"
                    required.project "resourceful-config"
                    required.project "architectury-api"
                    optional.project "modmenu"
                    optional.project "jei"
                }
            } else {
                dependencies {
                    required.project "resourceful-config"
                    required.project "architectury-api"
                    optional.project "jei"
                }
            }
        }
    }

    if (env.CURSE_TOKEN) {
        curseforge {
            apiKey = env.CURSE_TOKEN
            project {
                id = env.CURSE_PROJECT
                changelog = changelogText
                releaseType = 'release'
                addGameVersion minecraft_version
                addGameVersion modLoader.capitalize()

                mainArtifact(tasks.remapJar)

                if (modLoader == "fabric") {
                    relations {
                        requiredDependency "fabric-api"
                        requiredDependency "architectury-api"
                        requiredDependency "resourceful-config"
                        optionalDependency "modmenu"
                        optionalDependency "jei"
                    }
                } else {
                    relations {
                        requiredDependency "architectury-api"
                        requiredDependency "resourceful-config"
                        optionalDependency "jei"
                    }
                }
            }
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()
    }
}
